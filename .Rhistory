names(convergence.tracking[,c(1,2)])
names(convergence.tracking[,c(1,2)])
chosen.layers[addressing] <- layer
chosen.layers
convergence.tracking
source('~/gdrive/Mestrado/Toolkit_MT/NO_TUNE/DMTRS2.0.R')
max.layers.reached
chosen.layers
View(convergence.layers)
source('~/gdrive/Mestrado/Toolkit_MT/NO_TUNE/DMTRS2.0.R')
source('~/gdrive/Mestrado/Toolkit_MT/NO_TUNE/DMTRS2.0.R')
source('~/gdrive/Mestrado/Toolkit_MT/NO_TUNE/DMTRS2.0.R')
convergence.tracking
BBmisc::which.last(convergence.tracking[,1])
BBmisc::which.last(convergence.tracking[,1])-1
source('~/gdrive/Mestrado/Toolkit_MT/NO_TUNE/DMTRS2.0.R')
max.layers.reached
View(convergence.tracking)
View(convergence.layers)
chosen.layers
source('~/gdrive/Mestrado/Toolkit_MT/NO_TUNE/DMTRS2.0.R')
source('~/gdrive/Mestrado/Toolkit_MT/NO_TUNE/DMTRS2.0.R')
A <- read.csv("~/NIRS/baseNIRS-notexture.csv")
colnames(A)
dataset <- read.csv("~/NIRS/baseNIRS-notexture.csv")
y <- dataset[, c("pH", "L", "a", "b", "CRA")]
View(y)
x <- subset(dataset, -c("pH", "L", "a", "b", "CRA"))
x <- subset(dataset, subset = -c("pH", "L", "a", "b", "CRA"))
x <- subset(dataset, select = -c(pH, L, a, b, CRA))
dataset <- read.csv("~/NIRS/baseNIRS-notexture.csv")
dataset <- as.data.frame(sapply(dataset, function(x) as.numeric(x)))
maxs <- apply(dataset, 2, max)
mins <- apply(dataset, 2, min)
dataset <- as.data.frame(scale(dataset, center = mins, scale = maxs - mins))
x <- subset(dataset, select = -c(pH, L, a, b, CRA))
y <- dataset[, c("pH", "L", "a", "b", "CRA")]
View(y)
library(pls)
model <- plsr(y ~ x, ncomp = 50)
x <- as.matrix(x)
y <- as.matrix(y)
model <- plsr(y ~ x, ncomp = 50)
model$coefficients
View(model$coefficients)
model$projection
View(model$projection)
projections.dataset <- model$projection
projections.dataset <- cbind(projections.dataset, y)
projections.dataset <- cbind(t(projections).dataset, y)
projections.dataset <- cbind(t(projections.dataset), y)
projections.dataset <- model$projection
nrow(projections.dataset)
ncol(projections.dataset)
model$Yscores
resp <- predict(model, x)
View(resp)
resp <- coef(model, 50)
View(resp)
View(resp)
y_ <- as.matrix(y[,"pH"])
model <- plsr(y_ ~ x, ncomp = 50)
resp <- coef(model)
resp
View(resp)
resp <- coef(model, 1:50)
View(resp)
resp <- coef(model, 1:50) * x
resp <- coef(model, 1:50) %*% x
resp <- t(coef(model, 1:50)) * x
resp <- t(coef(model, 1:50))
resp <- t(as.matrix(coef(model, 1:50)))
View(resp)
resp <- as.matrix(coef(model, 1:50))
View(resp)
resp <- coef(model, 1:50)
View(resp[,1,])
View(resp[1,,])
resp <- t(coef(model, 1:50, intercept = F)[,1,])
resp <- t(coef(model, 1:50, intercept = F)[,1,]) * x
resp <- coef(model, 1:50, intercept = F)[,1,] * x
resp <- coef(model, 1:50, intercept = F)[,1,]
resp <- x * coef(model, 1:50, intercept = F)[,1,]
x <- as.matrix(x)
ncol(x)
resp <- x %*% coef(model, 1:50, intercept = F)[,1,]
View(resp)
dataset <- read.csv("~/NIRS/baseNIRS-notexture.csv")
dataset <- as.data.frame(sapply(dataset, function(x) as.numeric(x)))
maxs <- apply(dataset, 2, max)
mins <- apply(dataset, 2, min)
dataset <- as.data.frame(scale(dataset, center = mins, scale = maxs - mins))
x <- subset(dataset, select = -c(pH, L, a, b, CRA))
y <- dataset[, c("pH", "L", "a", "b", "CRA")]
x <- as.matrix(x)
y_ <- as.matrix(y[,"pH"])
library(pls)
model <- plsr(y_ ~ x, ncomp = 50)
View(model$projection)
model <- plsr(y_ ~ x, ncomp = 50)
resp <- x %*% model$projection
View(resp)
dataset <- read.csv("~/NIRS/baseNIRS-notexture.csv")
dataset <- as.data.frame(sapply(dataset, function(x) as.numeric(x)))
maxs <- apply(dataset, 2, max)
mins <- apply(dataset, 2, min)
dataset <- as.data.frame(scale(dataset, center = mins, scale = maxs - mins))
x <- subset(dataset, select = -c(pH, L, a, b, CRA))
y <- dataset[, c("pH", "L", "a", "b", "CRA")]
x <- as.matrix(x)
y_ <- as.matrix(y[,"pH"])
library(pls)
model <- plsr(y_ ~ x, ncomp = 50)
View(explvar(model))
dataset <- read.csv("~/NIRS/baseNIRS-notexture.csv")
dataset <- as.data.frame(sapply(dataset, function(x) as.numeric(x)))
maxs <- apply(dataset, 2, max)
mins <- apply(dataset, 2, min)
dataset <- as.data.frame(scale(dataset, center = mins, scale = maxs - mins))
x <- subset(dataset, select = -c(pH, L, a, b, CRA))
y <- dataset[, c("pH", "L", "a", "b", "CRA")]
x <- as.matrix(x)
y_ <- as.matrix(y[,"pH"])
library(pls)
model <- plsr(y_ ~ x, ncomp = 50)
resp1 <- x %*% coef(model, 1:50, intercept = F)[,1,]
resp2 <- x %*% model$projection
View(resp1)
View(resp2)
source('~/NIRS/merge_results.R')
View(merged)
dataset <- read.csv("~/NIRS/baseNIRS-notexture.csv")
dataset <- as.data.frame(sapply(dataset, function(x) as.numeric(x)))
maxs <- apply(dataset, 2, max)
mins <- apply(dataset, 2, min)
dataset <- as.data.frame(scale(dataset, center = mins, scale = maxs - mins))
x <- subset(dataset, select = -c(pH, L, a, b, CRA))
y <- dataset[, c("pH", "L", "a", "b", "CRA")]
x <- as.matrix(x)
y_ <- as.matrix(y[,"pH"])
library(pls)
model <- plsr(y_ ~ x, ncomp = 50)
View(model$scores)
model$scores
role <- model$scores
nrow(role)
View(role)
View(as.data.frame(role))
role <- as.numeric(model$scores)
role <- as.matrix(model$scores)
role <- as.numeric(model$scores)
role <- as.matrix(as.numeric(model$scores), nrow(158))
role <- as.matrix(as.numeric(model$scores), nrow=158)
role <- as.matrix(as.numeric(model$scores), nrow=158, ncol=50)
role <- scores(model)
str(role)
role[,1,]
role[,1]
resposta <- as.numeric(model$scores)
resposta <- matrix(as.numeric(model$scores), nrow = 158)
View(resposta)
role
dataset <- read.csv("~/NIRS/baseNIRS-notexture.csv")
dataset <- as.data.frame(sapply(dataset, function(x) as.numeric(x)))
maxs <- apply(dataset, 2, max)
mins <- apply(dataset, 2, min)
dataset <- as.data.frame(scale(dataset, center = mins, scale = maxs - mins))
x <- subset(dataset, select = -c(pH, L, a, b, CRA))
y <- dataset[, c("pH", "L", "a", "b", "CRA")]
x <- as.matrix(x)
y_ <- as.matrix(y[,"pH"])
library(pls)
model <- plsr(y_ ~ x, ncomp = 50)
resp2 <- x %*% model$projection
resp2
resp1 <- x %*% coef(model, 1:50, intercept = F)[,1,]
View(resp1)
View(resp2)
source('~/NIRS/merge_results.R')
source('~/NIRS/merge_results.R')
exp(2)
citation()
citation(datasets)
citation("datasets")
source('~/.active-rstudio-document')
targets
View(dataset)
colnames(dataset)
matrix(nrow = n.targets[b], ncol = n.targets[b], data = 0)
colnames(dep.level) <- rownames(dep.level) <- colnames(targets)
dep.level
View(dep.level)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
chisq.test(targets[,i], targets[,j])
chisq.test(targets[,c(i,j)])
A = chisq.test(targets[,c(i,j)])
A
A$statistic
A$parameter
A$p.value
A$data.name
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
warnings()
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
View(dep.level)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
View(dep.level)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
chisq.test(targets[,c(i,j)])$statistic
chisq.test(targets[,c(i,j)])$statistic
chisq.test(targets[,c(i,j)])
A = chisq.test(targets[,c(i,j)])
A$p.value
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
View(dep.level)
dep.level
tab <- table(targets[,i], targets[,j])
tab
chisq.test(tab)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
View(dep.level)
cor(targets)
View(cor(targets))
View(cov(targets))
View(cor(targets))
Hmisc::rcorr(as.matrix(targets))
View(cor(targets))
pairs(cor(targets))
splom(cor(targets))
View(cor(targets, method = "spearman"))
View(cor(targets, method = "pearson"))
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
warnings()
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
View(dep.level)
deps
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
deps[[1]]
deps[1]
length(deps)
library(reshape2)
library(ggplot2)
melt(deps[[1]])
melt(deps[[1]])
d.plot <- data.frame(matrix(nrow=0,ncol=5), stringsAsFactors = F)
d.plot
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
View(d.plot)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
cbind(melt(cor(targets, method = "pearson")),
rep(bases[b], n.targets[b]^2), rep("Pearson", n.targets[b]^2)
)
aux <- cbind(melt(cor(targets, method = "pearson")),
rep(bases[b], n.targets[b]^2), rep("Pearson", n.targets[b]^2)
)
colnames(aux) <- NA
aux
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
dplot <- data.frame(matrix(nrow=0,ncol=5), stringsAsFactors = F)
colnames(dplot) <- NA
aux <- cbind(melt(cor(targets, method = "pearson")),
rep(bases[b], n.targets[b]^2), rep("Pearson", n.targets[b]^2)
)
colnames(aux) <- NA
dplot <- rbind(dplot, aux)
aux <- cbind(melt(cor(targets, method = "spearman")),
rep(bases[b], n.targets[b]^2), rep("Spearman", n.targets[b]^2)
)
colnames(aux) <- NA
dplot <- rbind(dplot, aux)
View(dplot)
rm(list = ls())
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
View(dplot)
colnames(dplot) <- c("Targets", "Targets", "value", "Dataset", "Test")
View(dplot)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
aux <- cbind(melt(get_upper_tri(cor(targets, method = "pearson")), na.rm = T),
rep(bases[b], n.targets[b]^2), rep("Pearson", n.targets[b]^2)
)
aux <- melt(get_upper_tri(cor(targets, method = "pearson")), na.rm = T)
aux
get_upper_tri(cor(targets, method = "pearson"))
melt(get_upper_tri(cor(targets, method = "pearson")), na.rm = T)
aux <- melt(get_upper_tri(cor(targets, method = "pearson")), na.rm = T)
aux <- cbind(aux, rep(bases[b], nrow(aux)), rep("Pearson", nrow(aux))
)
aux
colnames(aux) <- NA
dplot <- rbind(dplot, aux)
dplot
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
View(dplot)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
dplot
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
g
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/chi2test.R')
dataset <- read.csv("~/Desktop/Base_NIR.csv")
amostras <- dataset[,1]
dataset <- dataset[,-1]
View(dataset)
pca.m <- prcomp(dataset, center = TRUE, scale. = TRUE)
summary(pca.m)
output <- pca.m$x[0,1:23]
View(output)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
output
output <- matrix(nrow=nrow(dataset), ncol=20, 0)
output
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
pca.m
predict(pca.m, dataset[i,])[,1:23]
output[i,] <- predict(pca.m, dataset[i,])[,1:23]
A=predict(pca.m, dataset[i,])[,1:23]
A
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
output
colnames(output) <- paste0("PC", 1:23)
View(output)
output <- cbind(amostras, output)
View(output)
amostras
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
View(output)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
View(output)
write.csv(output, "~/Desktop/NIR_Wooden.csv", row.names = F)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
targets <- read.csv("~/Desktop/PCA_WOODEN/Resultados_WB.csv")[,-1]
View(targets)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
View(output)
write.csv(output, "~/Desktop/PCA_WOODEN/NIR_Wooden_FULL10t.csv", row.names = F)
View(output)
View(targets)
View(targets)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/pca_extractor.R')
View(half12t)
View(half12t)
View(full10t)
paste("A", c(1,2,3), collapse = ".")
paste("A", c(1,2,3), sep = ".")
source('~/BMONN.R')
Y.b <- as.matrix(sapply(1:ncol(Y), function(z, actual, predicted) HuberLoss(actual[,z], predicted[,z]), actual = Y, predicted = t.predictions))
source('~/BMONN.R')
actual
source('~/BMONN.R')
warnings()
source('~/BMONN.R')
source('~/BMONN.R')
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
log
log[,"aRRMSE"]
role[counter:(counter+9),j]
counter:(counter+9)
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
View(role)
View(role)
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
log[,"aRRMSE"]
log[,"aRRMSE"]
log[,"aRRMSE"]
log[,"aRRMSE"]
paste0("~/Desktop/exp_MT_benchmarks/NEMENYI_UNIQUE/ZZ_performance_", mt, "_folds_rf_", i, ".csv")
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
View(role)
write.csv(role, "~/Desktop/nemisny.txt", row.names = F, col.names = F)
write.csv(role, "~/Desktop/nemisny.txt", row.names = F)
source('~/Desktop/aaaaaaaaaaaaaAAAAAAAAAAAAAAAaasdasdas/merge_nemenyi.R')
21  "Sep 10"  62259.691  168862119', header=TRUE)
df <- read.table(text = '
Quarter Coupon      Total
1   "Dec 06"  25027.072  132450574
2   "Dec 07"  76386.820  194154767
3   "Dec 08"  79622.147  221571135
4   "Dec 09"  74114.416  205880072
5   "Dec 10"  70993.058  188666980
6   "Jun 06"  12048.162  139137919
7   "Jun 07"  46889.369  165276325
8   "Jun 08"  84732.537  207074374
9   "Jun 09"  83240.084  221945162
10  "Jun 10"  81970.143  236954249
11  "Mar 06"   3451.248  116811392
12  "Mar 07"  34201.197  155190418
13  "Mar 08"  73232.900  212492488
14  "Mar 09"  70644.948  203663201
15  "Mar 10"  72314.945  203427892
16  "Mar 11"  88708.663  214061240
17  "Sep 06"  15027.252  121285335
18  "Sep 07"  60228.793  195428991
19  "Sep 08"  85507.062  257651399
20  "Sep 09"  77763.365  215048147
21  "Sep 10"  62259.691  168862119', header=TRUE)
View(df)
model <- lm(Coupon ~ Total, data=df)
new.df <- data.frame(Total=c(79037022, 83100656, 104299800))
predict(model, new.df)
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/run_exp.R')
setwd("~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE")
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/run_exp.R')
y
colnames(x)
targets
paste("LR_Target ~ ", colnames(x), collapse = " + ")
paste0("LR_Target ~ ", paste(colnames(x), collapse = " + "))
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/run_exp.R')
source('~/gdrive/Mestrado/Toolkit_MT/PRODUCTION_LINE/run_exp.R')
warnings()
